#! /usr/bin/env bash

prot="docker"
org="rocker"
img="r-ver"
ver="latest"

# to work on dgkf/debugadapter, need to work around docker macos host network
# sharing issues

config_flags="
    -v rlib_${org}_${img}_${ver}:/usr/local/lib/R/site-library
"

dockerfile="
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        cmake \
        proj-bin \
        gdal-bin \
        libfontconfig1-dev \
        libssl-dev \
        libgit2-dev \
        zlib1g-dev \
        libtool \
        libharfbuzz-dev \
        libfribidi-dev \
        libfreetype6-dev \
        libpng-dev \
        libtiff5-dev \
        libjpeg-dev \
        libudunits2-dev \
        libgdal-dev \
        libcairo2-dev

ENV CARGO_HOME=/tmp/.cargo
ENV RUSTUP_HOME=/tmp/.rustup
RUN apt-get install curl && \
        curl https://sh.rustup.rs -sSf | sh -s -- -y --no-modify-path

ENV PATH=/tmp/.rustup/bin:/tmp/.cargo/bin:$PATH
"

# quote args using printf over @Q for older bash versions
if [ $# -eq 0 ]; then args=""; else args=$(printf "%q " "$@"); fi
source "$(dirname $0)/_launch.sh" -- R $args
